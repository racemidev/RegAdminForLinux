/*
  Copyright 2008 Racemi Inc
  Copyright Andrew Tridgell 2004

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/

#ifndef RREGADMIN_SECURITY_DESCRIPTOR_SECDESC_TYPE_H
#define RREGADMIN_SECURITY_DESCRIPTOR_SECDESC_TYPE_H

#include <rregadmin/util/macros.h>

#include <rregadmin/util/ustring.h>

/**
 * @defgroup secdesc_type_secdesc_group Security Descriptor Type stuff.
 *
 * @ingroup secdesc_group
 */

G_BEGIN_DECLS

/** SecurityDescriptor type.
 *
 * @ingroup secdesc_type_secdesc_group
 */
typedef guint16 secdesc_type;

/** Possible type codes for a secdesc_type
 *
 * @ingroup secdesc_type_secdesc_group
 */
typedef enum
{
    SEC_DESC_OWNER_DEFAULTED =       0x0001,
    SEC_DESC_GROUP_DEFAULTED =       0x0002,

    SEC_DESC_SERVER_SECURITY =       0x0080,

    SEC_DESC_DACL_PRESENT =          0x0004,
    SEC_DESC_DACL_TRUSTED =          0x0040,
    SEC_DESC_DACL_DEFAULTED =        0x0008,
    SEC_DESC_DACL_AUTO_INHERIT_REQ = 0x0100,
    SEC_DESC_DACL_AUTO_INHERITED =   0x0400,
    SEC_DESC_DACL_PROTECTED =        0x1000,

    SEC_DESC_SACL_PRESENT =          0x0010,
    SEC_DESC_SACL_DEFAULTED =        0x0020,
    SEC_DESC_SACL_AUTO_INHERIT_REQ = 0x0200,
    SEC_DESC_SACL_AUTO_INHERITED =   0x0800,
    SEC_DESC_SACL_PROTECTED =        0x2000,

    SEC_DESC_RM_CONTROL_VALID =      0x4000,
    SEC_DESC_SELF_RELATIVE =         0x8000,

    DACL_EXTRA_CODES =               (SEC_DESC_DACL_TRUSTED
                                      | SEC_DESC_DACL_DEFAULTED
                                      | SEC_DESC_DACL_AUTO_INHERIT_REQ
                                      | SEC_DESC_DACL_AUTO_INHERITED
                                      | SEC_DESC_DACL_PROTECTED),

    SACL_EXTRA_CODES =               (SEC_DESC_SACL_DEFAULTED
                                      | SEC_DESC_SACL_AUTO_INHERIT_REQ
                                      | SEC_DESC_SACL_AUTO_INHERITED
                                      | SEC_DESC_SACL_PROTECTED),

} secdesc_type_code;

typedef enum
{
    SECDESC_DEFAULT_TYPE = SEC_DESC_SELF_RELATIVE,
    SECDESC_ERROR_TYPE = (secdesc_type)0xffff,

} secdesc_type_vals;

/** Convert a secdesc_type into a human readable string.
 *
 * @ingroup secdesc_type_secdesc_group
 */
ustring* secdesc_type_to_ustr(secdesc_type in_type);

/** Convert a string generated by secdesc_type_to_ustr() to a  secdesc_type.
 *
 * @ingroup secdesc_type_secdesc_group
 */
secdesc_type secdesc_type_from_ustr(const ustring *in_ustr);

G_END_DECLS

#endif /* RREGADMIN_SECURITY_DESCRIPTOR_SECDESC_TYPE_H */
