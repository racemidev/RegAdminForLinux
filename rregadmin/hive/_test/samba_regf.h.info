/* header auto-generated by pidl */

#ifndef _HEADER_regf
#define _HEADER_regf

#include <glib/gtypes.h>

typedef uint64_t samba_NTTIME;

#define REGF_OFFSET_NONE	( 0xffffffff )
struct samba_regf_version {
	guint32 major;/* [value] */
	guint32 minor;/* [value(3)] */
	guint32 release;/* [value(0)] */
	guint32 build;/* [value] */
};

struct samba_regf_hdr {
	const char *REGF_ID;/* [charset(DOS)] */
	guint32 update_counter1;
	guint32 update_counter2;
	samba_NTTIME modtime;
	struct samba_regf_version version;
	guint32 data_offset;
	guint32 last_block;
	guint32 uk7;/* [value] */
	const char *description;/* [charset(UTF16)] */
	guint32 padding[83];
	guint32 chksum;
};

struct samba_hbin_block {
	const char *HBIN_ID;/* [charset(DOS)] */
	guint32 offset_from_first;
	guint32 offset_to_next;
	guint32 unknown[2];
	samba_NTTIME last_change;
	guint32 block_size;
	guint8 *data;
};

enum samba_reg_key_type {
	REG_ROOT_KEY=0x20,
	REG_SUB_KEY=0x2C,
	REG_SYM_LINK=0x10
};

struct nk_block {
	const char *header;/* [charset(DOS)] */
	enum samba_reg_key_type type;
	samba_NTTIME last_change;
	guint32 uk1;
	guint32 parent_offset;
	guint32 num_subkeys;
	guint32 uk2;
	guint32 subkeys_offset;
	guint32 unknown_offset;
	guint32 num_values;
	guint32 values_offset;
	guint32 sk_offset;
	guint32 clsname_offset;
	guint32 unk3[5];
	uint16_t name_length;/* [value(strlen(key_name))] */
	uint16_t clsname_length;
	const char *key_name;/* [charset(DOS)] */
};

struct samba_sk_block {
	const char *header;/* [charset(DOS)] */
	uint16_t tag;
	guint32 prev_offset;
	guint32 next_offset;
	guint32 ref_cnt;
	guint32 rec_size;
	guint8 *sec_desc;
};

struct samba_lh_hash {
	guint32 nk_offset;
	guint32 base37;
};

struct samba_lh_block {
	const char *header;/* [charset(DOS)] */
	uint16_t key_count;
	struct samba_lh_hash *hr;
};

struct samba_li_block {
	const char *header;/* [charset(DOS)] */
	uint16_t key_count;
	guint32 *nk_offset;
};

struct samba_ri_block {
	const char *header;/* [charset(DOS)] */
	uint16_t key_count;
	guint32 *offset;
};

struct samba_vk_block {
	const char *header;/* [charset(DOS)] */
	uint16_t name_length;/* [value(strlen(data_name))] */
	guint32 data_length;
	guint32 data_offset;
	guint32 data_type;
	uint16_t flag;
	uint16_t unk1;
	const char *data_name;/* [charset(DOS)] */
};

struct samba_hash_record {
	guint32 nk_offset;
	const char *hash;/* [charset(DOS)] */
};

struct samba_lf_block {
	const char *header;/* [charset(DOS)] */
	uint16_t key_count;
	struct samba_hash_record *hr;
};

#endif /* _HEADER_regf */
