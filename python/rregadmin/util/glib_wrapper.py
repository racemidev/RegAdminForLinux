# generated by 'xml2py'
# flags '-c -d -v -k defst -lglib-2.0 -r ^gu?int[0-9]*$ -s gboolean -r ^g(const)?pointer$ -r GByteArray -r g_byte_.* -r gssize -r size_t -r GPtrArray -r g_ptr_.* -r gu?short -r gu?long -r gfloat -r gdouble -r ^g[a-z_]*char[0-9]*$ -r ^G.*Func$ -s TRUE -s FALSE -r gs?size -o glib_wrapper.py glib_wrapper.xml'
from ctypes import *

_libraries = {}
_libraries['libglib-2.0.so.0'] = CDLL('libglib-2.0.so.0')
STRING = c_char_p


# /usr/include/glib-2.0/glib/garray.h 45
class _GByteArray(Structure):
    pass
GByteArray = _GByteArray
# /usr/include/glib-2.0/glib/garray.h 51
class _GPtrArray(Structure):
    pass
GPtrArray = _GPtrArray
# /usr/include/glib-2.0/glib/garray.h 105
g_ptr_array_new = _libraries['libglib-2.0.so.0'].g_ptr_array_new
g_ptr_array_new.restype = POINTER(GPtrArray)
# g_ptr_array_new()
g_ptr_array_new.argtypes = []
g_ptr_array_new.__doc__ = \
"""GPtrArray * g_ptr_array_new()
/usr/include/glib-2.0/glib/garray.h:105"""
guint = c_uint
# /usr/include/glib-2.0/glib/garray.h 106
g_ptr_array_sized_new = _libraries['libglib-2.0.so.0'].g_ptr_array_sized_new
g_ptr_array_sized_new.restype = POINTER(GPtrArray)
# g_ptr_array_sized_new(reserved_size)
g_ptr_array_sized_new.argtypes = [guint]
g_ptr_array_sized_new.__doc__ = \
"""GPtrArray * g_ptr_array_sized_new(guint reserved_size)
/usr/include/glib-2.0/glib/garray.h:106"""
gpointer = c_void_p
gint = c_int
gboolean = gint
# /usr/include/glib-2.0/glib/garray.h 108
g_ptr_array_free = _libraries['libglib-2.0.so.0'].g_ptr_array_free
g_ptr_array_free.restype = POINTER(gpointer)
# g_ptr_array_free(array, free_seg)
g_ptr_array_free.argtypes = [POINTER(GPtrArray), gboolean]
g_ptr_array_free.__doc__ = \
"""gpointer * g_ptr_array_free(GPtrArray * array, gboolean free_seg)
/usr/include/glib-2.0/glib/garray.h:108"""
# /usr/include/glib-2.0/glib/garray.h 110
g_ptr_array_set_size = _libraries['libglib-2.0.so.0'].g_ptr_array_set_size
g_ptr_array_set_size.restype = None
# g_ptr_array_set_size(array, length)
g_ptr_array_set_size.argtypes = [POINTER(GPtrArray), gint]
g_ptr_array_set_size.__doc__ = \
"""void g_ptr_array_set_size(GPtrArray * array, gint length)
/usr/include/glib-2.0/glib/garray.h:110"""
# /usr/include/glib-2.0/glib/garray.h 112
g_ptr_array_remove_index = _libraries['libglib-2.0.so.0'].g_ptr_array_remove_index
g_ptr_array_remove_index.restype = gpointer
# g_ptr_array_remove_index(array, index_)
g_ptr_array_remove_index.argtypes = [POINTER(GPtrArray), guint]
g_ptr_array_remove_index.__doc__ = \
"""gpointer g_ptr_array_remove_index(GPtrArray * array, guint index_)
/usr/include/glib-2.0/glib/garray.h:112"""
# /usr/include/glib-2.0/glib/garray.h 114
g_ptr_array_remove_index_fast = _libraries['libglib-2.0.so.0'].g_ptr_array_remove_index_fast
g_ptr_array_remove_index_fast.restype = gpointer
# g_ptr_array_remove_index_fast(array, index_)
g_ptr_array_remove_index_fast.argtypes = [POINTER(GPtrArray), guint]
g_ptr_array_remove_index_fast.__doc__ = \
"""gpointer g_ptr_array_remove_index_fast(GPtrArray * array, guint index_)
/usr/include/glib-2.0/glib/garray.h:114"""
# /usr/include/glib-2.0/glib/garray.h 116
g_ptr_array_remove = _libraries['libglib-2.0.so.0'].g_ptr_array_remove
g_ptr_array_remove.restype = gboolean
# g_ptr_array_remove(array, data)
g_ptr_array_remove.argtypes = [POINTER(GPtrArray), gpointer]
g_ptr_array_remove.__doc__ = \
"""gboolean g_ptr_array_remove(GPtrArray * array, gpointer data)
/usr/include/glib-2.0/glib/garray.h:116"""
# /usr/include/glib-2.0/glib/garray.h 118
g_ptr_array_remove_fast = _libraries['libglib-2.0.so.0'].g_ptr_array_remove_fast
g_ptr_array_remove_fast.restype = gboolean
# g_ptr_array_remove_fast(array, data)
g_ptr_array_remove_fast.argtypes = [POINTER(GPtrArray), gpointer]
g_ptr_array_remove_fast.__doc__ = \
"""gboolean g_ptr_array_remove_fast(GPtrArray * array, gpointer data)
/usr/include/glib-2.0/glib/garray.h:118"""
# /usr/include/glib-2.0/glib/garray.h 121
g_ptr_array_remove_range = _libraries['libglib-2.0.so.0'].g_ptr_array_remove_range
g_ptr_array_remove_range.restype = None
# g_ptr_array_remove_range(array, index_, length)
g_ptr_array_remove_range.argtypes = [POINTER(GPtrArray), guint, guint]
g_ptr_array_remove_range.__doc__ = \
"""void g_ptr_array_remove_range(GPtrArray * array, guint index_, guint length)
/usr/include/glib-2.0/glib/garray.h:121"""
# /usr/include/glib-2.0/glib/garray.h 123
g_ptr_array_add = _libraries['libglib-2.0.so.0'].g_ptr_array_add
g_ptr_array_add.restype = None
# g_ptr_array_add(array, data)
g_ptr_array_add.argtypes = [POINTER(GPtrArray), gpointer]
g_ptr_array_add.__doc__ = \
"""void g_ptr_array_add(GPtrArray * array, gpointer data)
/usr/include/glib-2.0/glib/garray.h:123"""
gconstpointer = c_void_p
GCompareFunc = CFUNCTYPE(gint, gconstpointer, gconstpointer)
# /usr/include/glib-2.0/glib/garray.h 125
g_ptr_array_sort = _libraries['libglib-2.0.so.0'].g_ptr_array_sort
g_ptr_array_sort.restype = None
# g_ptr_array_sort(array, compare_func)
g_ptr_array_sort.argtypes = [POINTER(GPtrArray), GCompareFunc]
g_ptr_array_sort.__doc__ = \
"""void g_ptr_array_sort(GPtrArray * array, GCompareFunc compare_func)
/usr/include/glib-2.0/glib/garray.h:125"""
GCompareDataFunc = CFUNCTYPE(gint, gconstpointer, gconstpointer, gpointer)
# /usr/include/glib-2.0/glib/garray.h 128
g_ptr_array_sort_with_data = _libraries['libglib-2.0.so.0'].g_ptr_array_sort_with_data
g_ptr_array_sort_with_data.restype = None
# g_ptr_array_sort_with_data(array, compare_func, user_data)
g_ptr_array_sort_with_data.argtypes = [POINTER(GPtrArray), GCompareDataFunc, gpointer]
g_ptr_array_sort_with_data.__doc__ = \
"""void g_ptr_array_sort_with_data(GPtrArray * array, GCompareDataFunc compare_func, gpointer user_data)
/usr/include/glib-2.0/glib/garray.h:128"""
GFunc = CFUNCTYPE(None, gpointer, gpointer)
# /usr/include/glib-2.0/glib/garray.h 131
g_ptr_array_foreach = _libraries['libglib-2.0.so.0'].g_ptr_array_foreach
g_ptr_array_foreach.restype = None
# g_ptr_array_foreach(array, func, user_data)
g_ptr_array_foreach.argtypes = [POINTER(GPtrArray), GFunc, gpointer]
g_ptr_array_foreach.__doc__ = \
"""void g_ptr_array_foreach(GPtrArray * array, GFunc func, gpointer user_data)
/usr/include/glib-2.0/glib/garray.h:131"""
# /usr/include/glib-2.0/glib/garray.h 138
g_byte_array_new = _libraries['libglib-2.0.so.0'].g_byte_array_new
g_byte_array_new.restype = POINTER(GByteArray)
# g_byte_array_new()
g_byte_array_new.argtypes = []
g_byte_array_new.__doc__ = \
"""GByteArray * g_byte_array_new()
/usr/include/glib-2.0/glib/garray.h:138"""
# /usr/include/glib-2.0/glib/garray.h 139
g_byte_array_sized_new = _libraries['libglib-2.0.so.0'].g_byte_array_sized_new
g_byte_array_sized_new.restype = POINTER(GByteArray)
# g_byte_array_sized_new(reserved_size)
g_byte_array_sized_new.argtypes = [guint]
g_byte_array_sized_new.__doc__ = \
"""GByteArray * g_byte_array_sized_new(guint reserved_size)
/usr/include/glib-2.0/glib/garray.h:139"""
guint8 = c_ubyte
# /usr/include/glib-2.0/glib/garray.h 141
g_byte_array_free = _libraries['libglib-2.0.so.0'].g_byte_array_free
g_byte_array_free.restype = POINTER(guint8)
# g_byte_array_free(array, free_segment)
g_byte_array_free.argtypes = [POINTER(GByteArray), gboolean]
g_byte_array_free.__doc__ = \
"""guint8 * g_byte_array_free(GByteArray * array, gboolean free_segment)
/usr/include/glib-2.0/glib/garray.h:141"""
# /usr/include/glib-2.0/glib/garray.h 144
g_byte_array_append = _libraries['libglib-2.0.so.0'].g_byte_array_append
g_byte_array_append.restype = POINTER(GByteArray)
# g_byte_array_append(array, data, len)
g_byte_array_append.argtypes = [POINTER(GByteArray), POINTER(guint8), guint]
g_byte_array_append.__doc__ = \
"""GByteArray * g_byte_array_append(GByteArray * array, unknown * data, guint len)
/usr/include/glib-2.0/glib/garray.h:144"""
# /usr/include/glib-2.0/glib/garray.h 147
g_byte_array_prepend = _libraries['libglib-2.0.so.0'].g_byte_array_prepend
g_byte_array_prepend.restype = POINTER(GByteArray)
# g_byte_array_prepend(array, data, len)
g_byte_array_prepend.argtypes = [POINTER(GByteArray), POINTER(guint8), guint]
g_byte_array_prepend.__doc__ = \
"""GByteArray * g_byte_array_prepend(GByteArray * array, unknown * data, guint len)
/usr/include/glib-2.0/glib/garray.h:147"""
# /usr/include/glib-2.0/glib/garray.h 149
g_byte_array_set_size = _libraries['libglib-2.0.so.0'].g_byte_array_set_size
g_byte_array_set_size.restype = POINTER(GByteArray)
# g_byte_array_set_size(array, length)
g_byte_array_set_size.argtypes = [POINTER(GByteArray), guint]
g_byte_array_set_size.__doc__ = \
"""GByteArray * g_byte_array_set_size(GByteArray * array, guint length)
/usr/include/glib-2.0/glib/garray.h:149"""
# /usr/include/glib-2.0/glib/garray.h 151
g_byte_array_remove_index = _libraries['libglib-2.0.so.0'].g_byte_array_remove_index
g_byte_array_remove_index.restype = POINTER(GByteArray)
# g_byte_array_remove_index(array, index_)
g_byte_array_remove_index.argtypes = [POINTER(GByteArray), guint]
g_byte_array_remove_index.__doc__ = \
"""GByteArray * g_byte_array_remove_index(GByteArray * array, guint index_)
/usr/include/glib-2.0/glib/garray.h:151"""
# /usr/include/glib-2.0/glib/garray.h 153
g_byte_array_remove_index_fast = _libraries['libglib-2.0.so.0'].g_byte_array_remove_index_fast
g_byte_array_remove_index_fast.restype = POINTER(GByteArray)
# g_byte_array_remove_index_fast(array, index_)
g_byte_array_remove_index_fast.argtypes = [POINTER(GByteArray), guint]
g_byte_array_remove_index_fast.__doc__ = \
"""GByteArray * g_byte_array_remove_index_fast(GByteArray * array, guint index_)
/usr/include/glib-2.0/glib/garray.h:153"""
# /usr/include/glib-2.0/glib/garray.h 156
g_byte_array_remove_range = _libraries['libglib-2.0.so.0'].g_byte_array_remove_range
g_byte_array_remove_range.restype = POINTER(GByteArray)
# g_byte_array_remove_range(array, index_, length)
g_byte_array_remove_range.argtypes = [POINTER(GByteArray), guint, guint]
g_byte_array_remove_range.__doc__ = \
"""GByteArray * g_byte_array_remove_range(GByteArray * array, guint index_, guint length)
/usr/include/glib-2.0/glib/garray.h:156"""
# /usr/include/glib-2.0/glib/garray.h 158
g_byte_array_sort = _libraries['libglib-2.0.so.0'].g_byte_array_sort
g_byte_array_sort.restype = None
# g_byte_array_sort(array, compare_func)
g_byte_array_sort.argtypes = [POINTER(GByteArray), GCompareFunc]
g_byte_array_sort.__doc__ = \
"""void g_byte_array_sort(GByteArray * array, GCompareFunc compare_func)
/usr/include/glib-2.0/glib/garray.h:158"""
# /usr/include/glib-2.0/glib/garray.h 161
g_byte_array_sort_with_data = _libraries['libglib-2.0.so.0'].g_byte_array_sort_with_data
g_byte_array_sort_with_data.restype = None
# g_byte_array_sort_with_data(array, compare_func, user_data)
g_byte_array_sort_with_data.argtypes = [POINTER(GByteArray), GCompareDataFunc, gpointer]
g_byte_array_sort_with_data.__doc__ = \
"""void g_byte_array_sort_with_data(GByteArray * array, GCompareDataFunc compare_func, gpointer user_data)
/usr/include/glib-2.0/glib/garray.h:161"""
GCacheNewFunc = CFUNCTYPE(gpointer, gpointer)
GCacheDupFunc = CFUNCTYPE(gpointer, gpointer)
GCacheDestroyFunc = CFUNCTYPE(None, gpointer)
gchar = c_char
GCompletionFunc = CFUNCTYPE(STRING, gpointer)
gsize = c_ulong
GCompletionStrncmpFunc = CFUNCTYPE(gint, STRING, STRING, gsize)
guint32 = c_uint
GQuark = guint32
GDataForeachFunc = CFUNCTYPE(None, GQuark, gpointer, gpointer)
GHRFunc = CFUNCTYPE(gboolean, gpointer, gpointer, gpointer)
# /usr/include/glib-2.0/glib/ghook.h 72
class _GHook(Structure):
    pass
GHook = _GHook
GHookCompareFunc = CFUNCTYPE(gint, POINTER(GHook), POINTER(GHook))
GHookFindFunc = CFUNCTYPE(gboolean, POINTER(GHook), gpointer)
GHookFunc = CFUNCTYPE(None, gpointer)
GHookCheckFunc = CFUNCTYPE(gboolean, gpointer)
# /usr/include/glib-2.0/glib/ghook.h 62
class _GHookList(Structure):
    pass
GHookList = _GHookList
GHookFinalizeFunc = CFUNCTYPE(None, POINTER(GHookList), POINTER(GHook))
# /usr/include/glib-2.0/glib/giochannel.h 105
class _GIOChannel(Structure):
    pass
GIOChannel = _GIOChannel

# values for enumeration 'GIOCondition'
G_IO_IN = 1
G_IO_OUT = 4
G_IO_PRI = 2
G_IO_ERR = 8
G_IO_HUP = 16
G_IO_NVAL = 32
GIOCondition = c_int # enum
GIOFunc = CFUNCTYPE(gboolean, POINTER(GIOChannel), GIOCondition, gpointer)

# values for enumeration 'GIOStatus'
G_IO_STATUS_ERROR = 0
G_IO_STATUS_NORMAL = 1
G_IO_STATUS_EOF = 2
G_IO_STATUS_AGAIN = 3
GIOStatus = c_int # enum
gunichar = guint32
# /usr/include/glib-2.0/glib/gerror.h 31
class _GError(Structure):
    pass
GError = _GError
# /usr/include/glib-2.0/glib/giochannel.h 250
g_io_channel_read_unichar = _libraries['libglib-2.0.so.0'].g_io_channel_read_unichar
g_io_channel_read_unichar.restype = GIOStatus
# g_io_channel_read_unichar(channel, thechar, error)
g_io_channel_read_unichar.argtypes = [POINTER(GIOChannel), POINTER(gunichar), POINTER(POINTER(GError))]
g_io_channel_read_unichar.__doc__ = \
"""GIOStatus g_io_channel_read_unichar(GIOChannel * channel, gunichar * thechar, GError * * error)
/usr/include/glib-2.0/glib/giochannel.h:250"""
# /usr/include/glib-2.0/glib/giochannel.h 258
g_io_channel_write_unichar = _libraries['libglib-2.0.so.0'].g_io_channel_write_unichar
g_io_channel_write_unichar.restype = GIOStatus
# g_io_channel_write_unichar(channel, thechar, error)
g_io_channel_write_unichar.argtypes = [POINTER(GIOChannel), gunichar, POINTER(POINTER(GError))]
g_io_channel_write_unichar.__doc__ = \
"""GIOStatus g_io_channel_write_unichar(GIOChannel * channel, gunichar thechar, GError * * error)
/usr/include/glib-2.0/glib/giochannel.h:258"""
GSourceFunc = CFUNCTYPE(gboolean, gpointer)
GPid = c_int
GChildWatchFunc = CFUNCTYPE(None, GPid, gint, gpointer)
# /usr/include/glib-2.0/glib/gmain.h 122
class _GPollFD(Structure):
    pass
GPollFD = _GPollFD
GPollFunc = CFUNCTYPE(gint, POINTER(GPollFD), guint, gint)

# values for enumeration 'GLogLevelFlags'
G_LOG_FLAG_RECURSION = 1
G_LOG_FLAG_FATAL = 2
G_LOG_LEVEL_ERROR = 4
G_LOG_LEVEL_CRITICAL = 8
G_LOG_LEVEL_WARNING = 16
G_LOG_LEVEL_MESSAGE = 32
G_LOG_LEVEL_INFO = 64
G_LOG_LEVEL_DEBUG = 128
G_LOG_LEVEL_MASK = -4
GLogLevelFlags = c_int # enum
GLogFunc = CFUNCTYPE(None, STRING, GLogLevelFlags, STRING, gpointer)
GPrintFunc = CFUNCTYPE(None, STRING)
# /usr/include/glib-2.0/glib/gnode.h 79
class _GNode(Structure):
    pass
GNode = _GNode
GNodeTraverseFunc = CFUNCTYPE(gboolean, POINTER(GNode), gpointer)
GNodeForeachFunc = CFUNCTYPE(None, POINTER(GNode), gpointer)
GCopyFunc = CFUNCTYPE(gpointer, gconstpointer, gpointer)
GOptionArgFunc = CFUNCTYPE(gboolean, STRING, STRING, gpointer, POINTER(POINTER(GError)))
# /usr/include/glib-2.0/glib/goption.h 29
class _GOptionContext(Structure):
    pass
GOptionContext = _GOptionContext
# /usr/include/glib-2.0/glib/goption.h 30
class _GOptionGroup(Structure):
    pass
GOptionGroup = _GOptionGroup
GOptionParseFunc = CFUNCTYPE(gboolean, POINTER(GOptionContext), POINTER(GOptionGroup), gpointer, POINTER(POINTER(GError)))
GOptionErrorFunc = CFUNCTYPE(None, POINTER(GOptionContext), POINTER(GOptionGroup), gpointer, POINTER(POINTER(GError)))
# /usr/include/glib-2.0/glib/gscanner.h 164
class _GScanner(Structure):
    pass
GScanner = _GScanner
GScannerMsgFunc = CFUNCTYPE(None, POINTER(GScanner), STRING, gboolean)
# /usr/include/glib-2.0/glib/gsequence.h 27
class _GSequenceNode(Structure):
    pass
GSequenceIter = _GSequenceNode
GSequenceIterCompareFunc = CFUNCTYPE(gint, POINTER(GSequenceIter), POINTER(GSequenceIter), gpointer)
GSpawnChildSetupFunc = CFUNCTYPE(None, gpointer)
# /usr/include/glib-2.0/glib/gstring.h 40
class _GString(Structure):
    pass
GString = _GString
# /usr/include/glib-2.0/glib/gstring.h 89
g_string_append_unichar = _libraries['libglib-2.0.so.0'].g_string_append_unichar
g_string_append_unichar.restype = POINTER(GString)
# g_string_append_unichar(string, wc)
g_string_append_unichar.argtypes = [POINTER(GString), gunichar]
g_string_append_unichar.__doc__ = \
"""GString * g_string_append_unichar(GString * string, gunichar wc)
/usr/include/glib-2.0/glib/gstring.h:89"""
# /usr/include/glib-2.0/glib/gstring.h 95
g_string_prepend_unichar = _libraries['libglib-2.0.so.0'].g_string_prepend_unichar
g_string_prepend_unichar.restype = POINTER(GString)
# g_string_prepend_unichar(string, wc)
g_string_prepend_unichar.argtypes = [POINTER(GString), gunichar]
g_string_prepend_unichar.__doc__ = \
"""GString * g_string_prepend_unichar(GString * string, gunichar wc)
/usr/include/glib-2.0/glib/gstring.h:95"""
gssize = c_long
# /usr/include/glib-2.0/glib/gstring.h 107
g_string_insert_unichar = _libraries['libglib-2.0.so.0'].g_string_insert_unichar
g_string_insert_unichar.restype = POINTER(GString)
# g_string_insert_unichar(string, pos, wc)
g_string_insert_unichar.argtypes = [POINTER(GString), gssize, gunichar]
g_string_insert_unichar.__doc__ = \
"""GString * g_string_insert_unichar(GString * string, gssize pos, gunichar wc)
/usr/include/glib-2.0/glib/gstring.h:107"""
GThreadFunc = CFUNCTYPE(gpointer, gpointer)
GTraverseFunc = CFUNCTYPE(gboolean, gpointer, gpointer, gpointer)
gshort = c_short
glong = c_long
guchar = c_ubyte
gushort = c_ushort
gulong = c_ulong
gfloat = c_float
gdouble = c_double
GEqualFunc = CFUNCTYPE(gboolean, gconstpointer, gconstpointer)
GHashFunc = CFUNCTYPE(guint, gconstpointer)
GHFunc = CFUNCTYPE(None, gpointer, gpointer, gpointer)
GFreeFunc = CFUNCTYPE(None, gpointer)
GTranslateFunc = CFUNCTYPE(STRING, STRING, gpointer)
guint16 = c_ushort
gunichar2 = guint16
# /usr/include/glib-2.0/glib/gunicode.h 376
g_unichar_get_mirror_char = _libraries['libglib-2.0.so.0'].g_unichar_get_mirror_char
g_unichar_get_mirror_char.restype = gboolean
# g_unichar_get_mirror_char(ch, mirrored_ch)
g_unichar_get_mirror_char.argtypes = [gunichar, POINTER(gunichar)]
g_unichar_get_mirror_char.__doc__ = \
"""gboolean g_unichar_get_mirror_char(gunichar ch, gunichar * mirrored_ch)
/usr/include/glib-2.0/glib/gunicode.h:376"""
GVoidFunc = CFUNCTYPE(None)
size_t = c_ulong
gint8 = c_byte
gint16 = c_short
gint32 = c_int
gint64 = c_long
guint64 = c_ulong
_GByteArray._fields_ = [
    # /usr/include/glib-2.0/glib/garray.h 45
    ('data', POINTER(guint8)),
    ('len', guint),
]
_GPtrArray._fields_ = [
    # /usr/include/glib-2.0/glib/garray.h 51
    ('pdata', POINTER(gpointer)),
    ('len', guint),
]
_GError._fields_ = [
    # /usr/include/glib-2.0/glib/gerror.h 31
    ('domain', GQuark),
    ('code', gint),
    ('message', STRING),
]
_GHookList._fields_ = [
    # /usr/include/glib-2.0/glib/ghook.h 62
    ('seq_id', gulong),
    ('hook_size', guint, 16),
    ('is_setup', guint, 1),
    ('hooks', POINTER(GHook)),
    ('dummy3', gpointer),
    ('finalize_hook', GHookFinalizeFunc),
    ('dummy', gpointer * 2),
]
GDestroyNotify = CFUNCTYPE(None, gpointer)
_GHook._fields_ = [
    # /usr/include/glib-2.0/glib/ghook.h 72
    ('data', gpointer),
    ('next', POINTER(GHook)),
    ('prev', POINTER(GHook)),
    ('ref_count', guint),
    ('hook_id', gulong),
    ('flags', guint),
    ('func', gpointer),
    ('destroy', GDestroyNotify),
]
# /usr/include/glib-2.0/glib/giochannel.h 139
class _GIOFuncs(Structure):
    pass
GIOFuncs = _GIOFuncs
# /usr/include/glib-2.0/glib/gconvert.h 49
class _GIConv(Structure):
    pass
GIConv = POINTER(_GIConv)
_GIOChannel._fields_ = [
    # /usr/include/glib-2.0/glib/giochannel.h 105
    ('ref_count', gint),
    ('funcs', POINTER(GIOFuncs)),
    ('encoding', STRING),
    ('read_cd', GIConv),
    ('write_cd', GIConv),
    ('line_term', STRING),
    ('line_term_len', guint),
    ('buf_size', gsize),
    ('read_buf', POINTER(GString)),
    ('encoded_read_buf', POINTER(GString)),
    ('write_buf', POINTER(GString)),
    ('partial_write_buf', gchar * 6),
    ('use_buffer', guint, 1),
    ('do_encode', guint, 1),
    ('close_on_unref', guint, 1),
    ('is_readable', guint, 1),
    ('is_writeable', guint, 1),
    ('is_seekable', guint, 1),
    ('reserved1', gpointer),
    ('reserved2', gpointer),
]
_GPollFD._fields_ = [
    # /usr/include/glib-2.0/glib/gmain.h 122
    ('fd', gint),
    ('events', gushort),
    ('revents', gushort),
]
_GNode._fields_ = [
    # /usr/include/glib-2.0/glib/gnode.h 79
    ('data', gpointer),
    ('next', POINTER(GNode)),
    ('prev', POINTER(GNode)),
    ('parent', POINTER(GNode)),
    ('children', POINTER(GNode)),
]
_GOptionContext._fields_ = [
    # /usr/include/glib-2.0/glib/goption.h 29
]
_GOptionGroup._fields_ = [
    # /usr/include/glib-2.0/glib/goption.h 30
]
# /usr/include/glib-2.0/glib/gdataset.h 34
class _GData(Structure):
    pass
GData = _GData
# /usr/include/glib-2.0/glib/gscanner.h 124
class _GScannerConfig(Structure):
    pass
GScannerConfig = _GScannerConfig

# values for enumeration 'GTokenType'
G_TOKEN_EOF = 0
G_TOKEN_LEFT_PAREN = 40
G_TOKEN_RIGHT_PAREN = 41
G_TOKEN_LEFT_CURLY = 123
G_TOKEN_RIGHT_CURLY = 125
G_TOKEN_LEFT_BRACE = 91
G_TOKEN_RIGHT_BRACE = 93
G_TOKEN_EQUAL_SIGN = 61
G_TOKEN_COMMA = 44
G_TOKEN_NONE = 256
G_TOKEN_ERROR = 257
G_TOKEN_CHAR = 258
G_TOKEN_BINARY = 259
G_TOKEN_OCTAL = 260
G_TOKEN_INT = 261
G_TOKEN_HEX = 262
G_TOKEN_FLOAT = 263
G_TOKEN_STRING = 264
G_TOKEN_SYMBOL = 265
G_TOKEN_IDENTIFIER = 266
G_TOKEN_IDENTIFIER_NULL = 267
G_TOKEN_COMMENT_SINGLE = 268
G_TOKEN_COMMENT_MULTI = 269
G_TOKEN_LAST = 270
GTokenType = c_int # enum
# /usr/include/glib-2.0/glib/gscanner.h 108
class _GTokenValue(Union):
    pass
_GTokenValue._fields_ = [
    # /usr/include/glib-2.0/glib/gscanner.h 108
    ('v_symbol', gpointer),
    ('v_identifier', STRING),
    ('v_binary', gulong),
    ('v_octal', gulong),
    ('v_int', gulong),
    ('v_int64', guint64),
    ('v_float', gdouble),
    ('v_hex', gulong),
    ('v_string', STRING),
    ('v_comment', STRING),
    ('v_char', guchar),
    ('v_error', guint),
]
GTokenValue = _GTokenValue
# /usr/include/glib-2.0/glib/ghash.h 35
class _GHashTable(Structure):
    pass
GHashTable = _GHashTable
_GScanner._fields_ = [
    # /usr/include/glib-2.0/glib/gscanner.h 164
    ('user_data', gpointer),
    ('max_parse_errors', guint),
    ('parse_errors', guint),
    ('input_name', STRING),
    ('qdata', POINTER(GData)),
    ('config', POINTER(GScannerConfig)),
    ('token', GTokenType),
    ('value', GTokenValue),
    ('line', guint),
    ('position', guint),
    ('next_token', GTokenType),
    ('next_value', GTokenValue),
    ('next_line', guint),
    ('next_position', guint),
    ('symbol_table', POINTER(GHashTable)),
    ('input_fd', gint),
    ('text', STRING),
    ('text_end', STRING),
    ('buffer', STRING),
    ('scope_id', guint),
    ('msg_handler', GScannerMsgFunc),
]
_GSequenceNode._fields_ = [
    # /usr/include/glib-2.0/glib/gsequence.h 27
]
_GString._fields_ = [
    # /usr/include/glib-2.0/glib/gstring.h 40
    ('str', STRING),
    ('len', gsize),
    ('allocated_len', gsize),
]
_GIConv._fields_ = [
    # /usr/include/glib-2.0/glib/gconvert.h 49
]
_GData._fields_ = [
    # /usr/include/glib-2.0/glib/gdataset.h 34
]
_GHashTable._fields_ = [
    # /usr/include/glib-2.0/glib/ghash.h 35
]

# values for enumeration 'GSeekType'
G_SEEK_CUR = 0
G_SEEK_SET = 1
G_SEEK_END = 2
GSeekType = c_int # enum
# /usr/include/glib-2.0/glib/gmain.h 39
class _GSource(Structure):
    pass
GSource = _GSource

# values for enumeration 'GIOFlags'
G_IO_FLAG_APPEND = 1
G_IO_FLAG_NONBLOCK = 2
G_IO_FLAG_IS_READABLE = 4
G_IO_FLAG_IS_WRITEABLE = 8
G_IO_FLAG_IS_SEEKABLE = 16
G_IO_FLAG_MASK = 31
G_IO_FLAG_GET_MASK = 31
G_IO_FLAG_SET_MASK = 3
GIOFlags = c_int # enum
_GIOFuncs._fields_ = [
    # /usr/include/glib-2.0/glib/giochannel.h 139
    ('io_read', CFUNCTYPE(GIOStatus, POINTER(GIOChannel), STRING, gsize, POINTER(gsize), POINTER(POINTER(GError)))),
    ('io_write', CFUNCTYPE(GIOStatus, POINTER(GIOChannel), STRING, gsize, POINTER(gsize), POINTER(POINTER(GError)))),
    ('io_seek', CFUNCTYPE(GIOStatus, POINTER(GIOChannel), gint64, GSeekType, POINTER(POINTER(GError)))),
    ('io_close', CFUNCTYPE(GIOStatus, POINTER(GIOChannel), POINTER(POINTER(GError)))),
    ('io_create_watch', CFUNCTYPE(POINTER(GSource), POINTER(GIOChannel), GIOCondition)),
    ('io_free', CFUNCTYPE(None, POINTER(GIOChannel))),
    ('io_set_flags', CFUNCTYPE(GIOStatus, POINTER(GIOChannel), GIOFlags, POINTER(POINTER(GError)))),
    ('io_get_flags', CFUNCTYPE(GIOFlags, POINTER(GIOChannel))),
]
_GScannerConfig._fields_ = [
    # /usr/include/glib-2.0/glib/gscanner.h 124
    ('cset_skip_characters', STRING),
    ('cset_identifier_first', STRING),
    ('cset_identifier_nth', STRING),
    ('cpair_comment_single', STRING),
    ('case_sensitive', guint, 1),
    ('skip_comment_multi', guint, 1),
    ('skip_comment_single', guint, 1),
    ('scan_comment_multi', guint, 1),
    ('scan_identifier', guint, 1),
    ('scan_identifier_1char', guint, 1),
    ('scan_identifier_NULL', guint, 1),
    ('scan_symbols', guint, 1),
    ('scan_binary', guint, 1),
    ('scan_octal', guint, 1),
    ('scan_float', guint, 1),
    ('scan_hex', guint, 1),
    ('scan_hex_dollar', guint, 1),
    ('scan_string_sq', guint, 1),
    ('scan_string_dq', guint, 1),
    ('numbers_2_int', guint, 1),
    ('int_2_float', guint, 1),
    ('identifier_2_string', guint, 1),
    ('char_2_token', guint, 1),
    ('symbol_2_token', guint, 1),
    ('scope_0_fallback', guint, 1),
    ('store_int64', guint, 1),
    ('padding_dummy', guint),
]
# /usr/include/glib-2.0/glib/gmain.h 63
class _GSourceCallbackFuncs(Structure):
    pass
GSourceCallbackFuncs = _GSourceCallbackFuncs
# /usr/include/glib-2.0/glib/gmain.h 75
class _GSourceFuncs(Structure):
    pass
GSourceFuncs = _GSourceFuncs
# /usr/include/glib-2.0/glib/gmain.h 28
class _GMainContext(Structure):
    pass
GMainContext = _GMainContext
# /usr/include/glib-2.0/glib/gslist.h 37
class _GSList(Structure):
    pass
GSList = _GSList
_GSource._fields_ = [
    # /usr/include/glib-2.0/glib/gmain.h 39
    ('callback_data', gpointer),
    ('callback_funcs', POINTER(GSourceCallbackFuncs)),
    ('source_funcs', POINTER(GSourceFuncs)),
    ('ref_count', guint),
    ('context', POINTER(GMainContext)),
    ('priority', gint),
    ('flags', guint),
    ('source_id', guint),
    ('poll_fds', POINTER(GSList)),
    ('prev', POINTER(GSource)),
    ('next', POINTER(GSource)),
    ('reserved1', gpointer),
    ('reserved2', gpointer),
]
_GMainContext._fields_ = [
    # /usr/include/glib-2.0/glib/gmain.h 28
]
_GSourceCallbackFuncs._fields_ = [
    # /usr/include/glib-2.0/glib/gmain.h 63
    ('ref', CFUNCTYPE(None, gpointer)),
    ('unref', CFUNCTYPE(None, gpointer)),
    ('get', CFUNCTYPE(None, gpointer, POINTER(GSource), POINTER(GSourceFunc), POINTER(gpointer))),
]
GSourceDummyMarshal = CFUNCTYPE(None)
_GSourceFuncs._fields_ = [
    # /usr/include/glib-2.0/glib/gmain.h 75
    ('prepare', CFUNCTYPE(gboolean, POINTER(GSource), POINTER(gint))),
    ('check', CFUNCTYPE(gboolean, POINTER(GSource))),
    ('dispatch', CFUNCTYPE(gboolean, POINTER(GSource), GSourceFunc, gpointer)),
    ('finalize', CFUNCTYPE(None, POINTER(GSource))),
    ('closure_callback', GSourceFunc),
    ('closure_marshal', GSourceDummyMarshal),
]
_GSList._fields_ = [
    # /usr/include/glib-2.0/glib/gslist.h 37
    ('data', gpointer),
    ('next', POINTER(GSList)),
]
__all__ = ['G_TOKEN_IDENTIFIER_NULL', 'G_IO_STATUS_ERROR',
           'gunichar2', 'G_TOKEN_RIGHT_CURLY', 'guint',
           'GCompletionStrncmpFunc', 'guchar', 'G_TOKEN_COMMA',
           'size_t', 'G_TOKEN_LEFT_CURLY', 'g_byte_array_sized_new',
           'G_TOKEN_STRING', 'G_TOKEN_SYMBOL', 'G_TOKEN_IDENTIFIER',
           'G_IO_FLAG_MASK', 'GTokenType', 'G_LOG_LEVEL_ERROR',
           'G_IO_FLAG_NONBLOCK', 'G_TOKEN_COMMENT_SINGLE', 'gint8',
           '_GMainContext', 'G_IO_FLAG_GET_MASK', 'G_SEEK_CUR',
           '_GPtrArray', 'GIConv', 'guint16', 'g_ptr_array_foreach',
           'g_byte_array_remove_index_fast', 'G_IO_FLAG_APPEND',
           'gushort', 'GDestroyNotify', 'GSequenceIterCompareFunc',
           'GSourceFuncs', 'GVoidFunc', 'G_LOG_LEVEL_WARNING',
           'G_TOKEN_INT', '_GHookList', 'gint', 'GScanner',
           'g_unichar_get_mirror_char', 'GScannerConfig',
           'g_ptr_array_add', 'gunichar', 'guint64', '_GIOChannel',
           'GNode', 'GHook', 'GOptionArgFunc', 'G_LOG_LEVEL_MASK',
           'G_IO_PRI', 'G_IO_STATUS_AGAIN',
           'g_ptr_array_remove_index_fast', 'GSeekType', 'GHFunc',
           'GFreeFunc', 'gpointer', 'G_SEEK_SET',
           'G_IO_FLAG_IS_WRITEABLE', 'G_TOKEN_OCTAL', 'G_IO_ERR',
           'G_LOG_LEVEL_INFO', 'GString', 'gshort', 'GQuark',
           'GOptionErrorFunc', 'g_byte_array_free', 'GOptionContext',
           'G_TOKEN_RIGHT_PAREN', 'G_LOG_FLAG_FATAL',
           'GCacheDestroyFunc', '_GSourceCallbackFuncs', 'GIOFlags',
           'guint32', 'G_TOKEN_COMMENT_MULTI', '_GSource',
           'GHookCheckFunc', 'gint16', 'G_IO_OUT', 'GHashFunc',
           'G_LOG_LEVEL_CRITICAL', 'GPid', 'GHookFinalizeFunc',
           'g_byte_array_new', 'GTraverseFunc', 'G_IO_IN', 'gint64',
           'GCacheDupFunc', 'guint8', 'GOptionGroup', 'GData',
           'g_ptr_array_remove_index', '_GScanner', 'g_ptr_array_new',
           'G_TOKEN_FLOAT', 'G_IO_FLAG_IS_SEEKABLE', '_GData',
           'g_byte_array_sort', 'GIOChannel', 'GCompareDataFunc',
           'GSpawnChildSetupFunc', 'G_TOKEN_LEFT_BRACE',
           'GOptionParseFunc', 'GFunc', 'g_string_insert_unichar',
           'GPtrArray', 'GHashTable', 'GDataForeachFunc',
           'g_io_channel_write_unichar',
           'g_byte_array_sort_with_data', 'GHookList', 'GSList',
           'GLogLevelFlags', 'G_LOG_LEVEL_MESSAGE',
           'GNodeTraverseFunc', 'GPollFunc', '_GByteArray',
           'GNodeForeachFunc', 'GCompareFunc', 'GSource',
           'G_TOKEN_HEX', 'g_ptr_array_sort_with_data', 'gulong',
           'GError', 'g_byte_array_append', 'GSourceFunc',
           '_GIOFuncs', 'G_TOKEN_NONE', 'gdouble', 'GHookFindFunc',
           'g_byte_array_remove_index', 'g_byte_array_prepend',
           'G_TOKEN_BINARY', 'g_ptr_array_sized_new', 'gsize',
           'G_SEEK_END', 'G_IO_HUP', 'GSequenceIter', 'GHRFunc',
           'gssize', 'GHookCompareFunc', 'GPollFD',
           'g_string_prepend_unichar', 'GEqualFunc', 'GPrintFunc',
           'GLogFunc', 'G_TOKEN_EQUAL_SIGN', '_GOptionGroup',
           'GIOStatus', 'gchar', 'G_IO_STATUS_NORMAL', 'G_IO_NVAL',
           '_GTokenValue', 'g_ptr_array_remove_fast',
           'g_ptr_array_remove_range', '_GScannerConfig', '_GString',
           'g_ptr_array_remove', 'g_byte_array_set_size',
           'G_IO_STATUS_EOF', 'G_LOG_FLAG_RECURSION', '_GHashTable',
           '_GSequenceNode', 'GSourceDummyMarshal', 'GHookFunc',
           'G_IO_FLAG_IS_READABLE', 'GThreadFunc', 'gint32',
           '_GSourceFuncs', '_GNode', 'g_ptr_array_free',
           'G_TOKEN_LEFT_PAREN', '_GSList', 'G_TOKEN_ERROR', 'glong',
           'G_TOKEN_RIGHT_BRACE', 'GCompletionFunc', 'GMainContext',
           'GIOFuncs', 'G_TOKEN_EOF', 'GTranslateFunc',
           'g_byte_array_remove_range', 'GChildWatchFunc', 'gfloat',
           'GCacheNewFunc', 'GCopyFunc', '_GPollFD', '_GIConv',
           'g_ptr_array_sort', 'gconstpointer', 'GScannerMsgFunc',
           'G_TOKEN_CHAR', 'G_IO_FLAG_SET_MASK', 'GIOCondition',
           'GIOFunc', '_GError', 'GTokenValue',
           'g_io_channel_read_unichar', '_GHook', 'G_TOKEN_LAST',
           'g_string_append_unichar', 'GSourceCallbackFuncs',
           'g_ptr_array_set_size', '_GOptionContext',
           'G_LOG_LEVEL_DEBUG', 'gboolean', 'GByteArray']
